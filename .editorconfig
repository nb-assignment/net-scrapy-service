# editorconfig.org
# https://aka.ms/editorconfigdocs
# These settings adheres to Coolblue and .NET coding standards

# top-most EditorConfig file
root = true

# Default settings for every file
[*]
end_of_line = lf
indent_size = 4
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

# C# files
[*.cs]

# Language rules
# ------------------------------

# this and Me preferences (IDE0003 and IDE0009)
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead of framework type names for type references (IDE0049)
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Modifier preferences
# Order modifiers (IDE0036)
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion
# Add accessibility modifiers (IDE0040)
dotnet_style_require_accessibility_modifiers = always:suggestion
# Add readonly modifier (IDE0044)
dotnet_style_readonly_field = true:suggestion
# Make local function static (IDE0062)
csharp_prefer_static_local_function = true:suggestion

# Parentheses preferences (IDE0047 and IDE0048)
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity:suggestion

# Expression-level preferences
# Use object initializers (IDE0017)
dotnet_style_object_initializer = true:suggestion
# Use collection initializers (IDE0028)
dotnet_style_collection_initializer = true:suggestion
# Use auto property (IDE0032)
dotnet_style_prefer_auto_properties = true:suggestion
# Use explicitly provided tuple name (IDE0033)
dotnet_style_explicit_tuple_names = true:suggestion
# Use inferred member name (IDE0037)
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
# Use conditional expression for assignment (IDE0045)
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
# Use conditional expression for return (IDE0046)
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
# Use compound assignment (IDE0054 and IDE0074)
dotnet_style_prefer_compound_assignment = true:suggestion
# Simplify interpolation (IDE0071)
dotnet_style_prefer_simplified_interpolation = true:suggestion
# Simplify conditional expression (IDE0075)
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
# Inline variable declaration (IDE0018)
csharp_style_inlined_variable_declaration = true:suggestion
# Simplify 'default' expression (IDE0034)
csharp_prefer_simple_default_expression = true:suggestion
# Use local function instead of lambda (IDE0039)
csharp_style_pattern_local_over_anonymous_function = true:suggestion
# Deconstruct variable declaration (IDE0042)
csharp_style_deconstructed_variable_declaration = true:suggestion
# Use index operator (IDE0056)
csharp_style_prefer_index_operator = true:suggestion
# Use range operator (IDE0057)
csharp_style_prefer_range_operator = true:suggestion
# Simplify new expression (IDE0090)
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion

# Null-checking preferences
# Use coalesce expression (IDE0029 and IDE0030)
dotnet_style_coalesce_expression = true:suggestion
# Use null propagation (IDE0031)
dotnet_style_null_propagation = true:suggestion
# Use is null check (IDE0041)
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
# Use throw expression (IDE0016)
csharp_style_throw_expression = true:suggestion
# Use conditional delegate call (IDE1005)
csharp_style_conditional_delegate_call = true:suggestion

# 'var' preferences (IDE0007 and IDE0008)
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Expression-bodied-members
# Use expression body for constructors (IDE0021)
csharp_style_expression_bodied_constructors = false:suggestion
# Use expression body for methods (IDE0022)
csharp_style_expression_bodied_methods = true:suggestion
# Use expression body for operators (IDE0023 and IDE0024)
csharp_style_expression_bodied_operators = false:suggestion
# Use expression body for properties (IDE0025)
csharp_style_expression_bodied_properties = true:suggestion
# Use expression body for indexers (IDE0026)
csharp_style_expression_bodied_indexers = true:suggestion
# Use expression body for accessors (IDE0027)
csharp_style_expression_bodied_accessors = true:suggestion
# Use expression body for lambdas (IDE0053)
csharp_style_expression_bodied_lambdas = true:suggestion
# Use expression body for local functions (IDE0061)
csharp_style_expression_bodied_local_functions = false:suggestion

# Pattern matching preferences
# Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019)
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Use pattern matching to avoid 'is' check followed by a cast (IDE0020)
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
# Use switch expression (IDE0066)
csharp_style_prefer_switch_expression = true:suggestion
# Use pattern matching (IDE0078)
csharp_style_prefer_pattern_matching = true:suggestion
# Use pattern matching (not operator) (IDE0083)
csharp_style_prefer_not_pattern = true:suggestion

# Code block preferences
# Add braces (IDE0011)
csharp_prefer_braces = true:suggestion
# Use simple 'using' statement (IDE0063)
csharp_prefer_simple_using_statement = true:suggestion

# 'using' directive placement (IDE0065)
csharp_using_directive_placement = outside_namespace:suggestion

# Unnecessary code rules
# ------------------------------

# Remove unused parameter (IDE0060)
dotnet_code_quality_unused_parameters = all:suggestion
# Remove unnecessary suppression (IDE0079)
dotnet_remove_unnecessary_suppression_exclusions = none:suggestion
# Remove unnecessary expression value (IDE0058)
csharp_style_unused_value_expression_statement_preference = discard_variable:none
# Remove unnecessary value assignment (IDE0059)
csharp_style_unused_value_assignment_preference = discard_variable:none

# Formatting rules
# ------------------------------

# Organize using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Newline options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrap options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# Naming conventions
# ------------------------------

# Name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Name all static readonly fields using PascalCase
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.symbols  = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.static_readonly_fields.applicable_kinds   = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style    = static_prefix_style

dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal

dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# ReSharper settings
# ------------------------------

dotnet_naming_rule.method_rule.import_to_resharper = as_predefined
dotnet_naming_rule.method_rule.resharper_style = AaBb, Given + AaBb_AaBb

# ReSharper properties
resharper_autodetect_indent_settings = true
resharper_blank_lines_around_single_line_auto_property = 1
resharper_blank_lines_around_single_line_property = 1
resharper_blank_lines_before_block_statements = 1
resharper_csharp_max_line_length = 256
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_before_first_type_parameter_constraint = true
resharper_csharp_wrap_before_ternary_opsigns = false
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_initializer_arrangement = false
resharper_local_function_body = expression_body
resharper_max_enum_members_on_line = 1
resharper_max_initializer_elements_on_line = 10
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_simple_embedded_statement_on_same_line = true
resharper_remove_blank_lines_near_braces_in_code = false
resharper_show_autodetect_configure_formatting_tip = false
resharper_space_within_single_line_array_initializer_braces = true
resharper_trailing_comma_in_multiline_lists = true
resharper_use_indent_from_vs = false
resharper_wrap_array_initializer_style = chop_if_long
resharper_wrap_chained_method_calls = chop_if_long

# ReSharper inspection severities
resharper_arrange_local_function_body_highlighting = suggestion
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_is_expression_always_true_highlighting = none
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

# JSON files
[*.json]
indent_size = 2

# XML project files
[*.{csproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

# XML build files
[*.builds]
indent_size = 2

# XML files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# XML config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd, bat}]
end_of_line = crlf
